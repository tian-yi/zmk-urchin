#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_italian.h"

// Layer definitions
#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6
// -----------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "QUICK_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
			rpi: require_prior_idle {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    require-prior-idle-ms = <100>;
    bindings = <&kp>, <&kp>;
	};
	};

	macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
			label = "ZM_unstick";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};

	qu: qu {
		  label = "qu";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp Q &kp U>;
		};
	psql: psql {
		  label = "psql";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp P &kp S &kp Q &kp L>;
		};
	};

	combos {
		compatible = "zmk,combos";

		// internal-left & external-right thumb keys
		combo_sym2 {
			timeout-ms = <200>;
			key-positions = <31 33>;
			bindings = <&mo SYM2>;
		};
		// lx
		 combo_esc {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp ESC>;
        };
		// 'u
		 combo_enter {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp ENTER>;
        };
		 combo_q {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp Q>;
        };
		 combo_qu {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&qu>;
        };
		 combo_z {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp Z>;
        };
		combo_psql {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&psql>;
        };
		// both left thumb keys
		combo_settings {
			timeout-ms = <200>;
			key-positions = <30 31>;
			bindings = <&mo SETTINGS>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			&kp V         &kp W  &kp G         &kp M          &kp J    	&kp SEMICOLON  &kp COMMA       &kp PERIOD   &kp MINUS  &kp EQUAL
      &rpi LCTRL S  &kp N  &rpi LGUI T   &rpi LSHIFT H  &kp K	    &kp SLASH      &rpi RSHIFT A   &rpi RGUI E  &kp I      &rpi RCTRL C
      &kp F         &kp P  &kp D         &lt 2 L        &kp X     &kp SQT        &lt 2 U         &kp O        &kp Y      &kp B
									 		 							&rpi LEFT_ALT R  &lt 1 BSPC     &lt 1 SPACE  &rpi RIGHT_ALT TAB
			>;
		};

		// Numbers and high frequency symbols
		sym_layer {
			label = "Sym";
			bindings = <
      &kp EXCL  &kp AT    &kp HASH  &kp LBRC &kp RBRC    &kp ASTERISK  &kp N7 &kp N8 &kp N9 &kp CAPS
      &kp CARET &kp TILDE &kp GRAVE &kp LBKT &kp RBKT    &kp BSLH   &kp N4 &kp N5 &kp N6 &caps_word
      &kp DOLLAR  &kp PIPE  &kp AMPS  &kp LPAR &kp RPAR    &kp N0 &kp N1 &kp N2 &kp N3 &kp PERCENT
                                       &trans  &trans       &trans &trans
			>;
		};

		// Nav and medium controls
		nav_layer {
			label = "Nav";
			bindings = <
			&trans &kp C_PREV  &kp C_PP      &kp C_NEXT   &trans    	&kp PG_UP  &kp HOME  &kp UP &kp END &trans
		  &trans &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP &trans 		    &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT &trans
			&trans &trans &kp C_BRI_INC &kp C_BRI_DEC &trans       	&trans &trans &trans &trans &trans
																		&to 3 &to 4    &kp ENTER  &tog 2
			>;
		};

		// Function keys with modifiers
		fnc_layer {
			label = "FRow";
			bindings = <
			&kp F1 &kp F2 &kp F3 &kp F4 &kp F5                  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
			&sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &kp RALT     &kp F11 &kp F12  &kp PRINTSCREEN &trans &trans
			&none &none &none &none &none				          &none &none &none &none &none
							  &none &none              &to 0 &to 0
			>;
		};

		// Used to change the keyboard's settings.
		settings_layer {
				label = "Sett.";
				bindings = <
				&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader
				&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none
				&none &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &none
										&none &none                         &to 0 &to 0
				>;
		};
	};
};
