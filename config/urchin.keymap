/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_italian.h"

// Layer definitions
#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6
// -----------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "QUICK_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
			rpi: require_prior_idle {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    require-prior-idle-ms = <125>;
    bindings = <&kp>, <&kp>;
	};
	};

	macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
			label = "ZM_unstick";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};
	};

	combos {
		compatible = "zmk,combos";

		// internal-left & external-right thumb keys
		combo_sym2 {
			timeout-ms = <200>;
			key-positions = <31 33>;
			bindings = <&mo SYM2>;
		};
		// DL
		 combo_esc {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp ESC>;
        };
		// UO
		 combo_enter {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp ENTER>;
        };
		 combo_q {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp Q>;
        };
		 combo_z {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp Z>;
        };
		// both left thumb keys
		combo_settings {
			timeout-ms = <200>;
			key-positions = <30 31>;
			bindings = <&mo SETTINGS>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		// Base alpha layer
		default_layer {
			label = "Base";
			bindings = <
			&kp V        &kp W          &kp G         &kp M            &kp J		&kp SEMICOLON  &kp COMMA         &kp PERIOD    &kp MINUS      &kp EQUAL
      &rpi LGUI S  &rpi LSHIFT N  &rpi LCTRL T  &rpi LEFT_ALT H  &kp K		&kp SQT        &rpi RIGHT_ALT A  &rpi RCTRL E  &rpi RSHIFT I  &rpi LGUI C
      &kp P        &kp F          &kp D         &kp L            &kp X    &kp SLASH      &kp U             &kp O         &kp Y          &kp B
									 		 														  &kp R  &lt 1 TAB    &lt 1 BSPC  &kp SPACE
			>;
		};

		// Numbers and high frequency symbols
		sym_layer {
			label = "Sym";
			bindings = <
      &kp EXCL  &kp AT    &kp HASH  &kp LBRC &kp RBRC    &STAR    &kp N7 &kp N8 &kp N9 &CAPS
      &kp CARET &kp TILDE &kp GRAVE &kp LBKT &kp RBKT    &PERCENT &kp N4 &kp N5 &kp N6 &caps_word
      &kp BSLH  &kp PIPE  &kp AMPS  &kp LPAR &kp RPAR    &kp N0   &kp N1 &kp N2 &kp N3 &trans
                                       &trans  &trans       &trans &trans
			>;
		};

		// Main modifiers and arrow keys
		ext_layer {
			label = "Mods";
			bindings = <
			&kp ESC  &kp C_PREV &kp C_PP  &kp C_NEXT  &kp C_PAUSE    	&kp PG_UP  &kp HOME &kp UP &kp END &kp CAPS
			&sk LALT &sk LGUI  &sk LSHIFT  &sk LCTRL  &kp RALT 			&kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT   &kp DEL
			&kp LC(Z)  &kp LC(X) &kp LC(C) &kp TAB   &kp LC(V)          &kp LC(BSPC) &kp BSPC &trans &trans  &trans
																		&trans &kp LCTRL    &kp ENTER  &mo FNC
			>;
		};

		// Function keys with modifiers
		fnc_layer {
			label = "FRow";
			bindings = <
			&kp F1 &kp F2 &kp F3 &kp F4 &kp F5                  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
			&sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &kp RALT     &kp F11 &kp F12  &kp PRINTSCREEN &trans &trans
			&none &none &none &none &none				          &none &none &none &none &none
							  &none &none              &none &none
			>;
		};

		// Low frequency symbols.
		symbols_2_layer {
			label = "Sym.2";
			bindings = <
			&kp IT_CARET &kp IT_UNDER &kp IT_PND &kp IT_EUR &kp IT_HASH         &none &none &none &none &none
			&kp IT_BKTK &kp IT_TILDE &kp IT_BSLH &kp IT_PIPE &kp IT_AND         &none &none &none &none &none
			&none 			&none 			 &kp IT_SECT &kp IT_CCED &kp IT_DEG				  &none &none &none &none &none
																	&none &none        	&none &none
			>;
		};


		// Used to change the keyboard's settings.
		settings_layer {
				label = "Sett.";
				bindings = <
				&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader
				&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none
				&none &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &none
										&none &none                         &none &none
				>;
		};
	};
};
